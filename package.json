{
  "name": "reswob-http-client",
  "displayName": "Reswob HTTP Client",
  "description": "A comprehensive HTTP client for VS Code that enables testing REST APIs directly within your workspace. Features request collections, Postman compatibility, drag & drop organization, vim navigation, and dev container support for seamless development workflows.",
  "version": "2.0.4",
  "publisher": "reswob",
  "license": "GPL-3.0",
  "repository": {
    "type": "git",
    "url": "https://github.com/CharlieGitDB/reswob-http-client.git"
  },
  "engines": {
    "vscode": "^1.102.0"
  },
  "categories": [
    "Other",
    "Testing",
    "Debuggers"
  ],
  "activationEvents": [],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "reswob-http-client.helloWorld",
        "title": "Hello World"
      },
      {
        "command": "reswob-http-client.openHttpClient",
        "title": "New Request",
        "icon": "$(add)"
      },
      {
        "command": "reswob-http-client.saveRequest",
        "title": "Save Request"
      },
      {
        "command": "reswob-http-client.loadRequest",
        "title": "Load Request"
      },
      {
        "command": "reswob-http-client.exportRequests",
        "title": "Export All Requests"
      },
      {
        "command": "reswob-http-client.importRequests",
        "title": "Import Requests",
        "icon": "$(cloud-download)"
      },
      {
        "command": "reswob-http-client.deleteRequest",
        "title": "Delete Request",
        "icon": "$(trash)"
      },
      {
        "command": "reswob-http-client.deleteCollection",
        "title": "Delete Collection",
        "icon": "$(trash)"
      },
      {
        "command": "reswob-http-client.createCollection",
        "title": "New Collection",
        "icon": "$(new-folder)"
      },
      {
        "command": "reswob-http-client.addToCollection",
        "title": "Add to Collection"
      },
      {
        "command": "reswob-http-client.removeFromCollection",
        "title": "Remove from Collection"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "reswob-http-client",
          "title": "Reswob HTTP Client",
          "icon": "$(globe)"
        }
      ]
    },
    "submenus": [
      {
        "id": "reswob-http-client.createMenu",
        "label": "Create",
        "icon": "$(chevron-down)"
      }
    ],
    "views": {
      "reswob-http-client": [
        {
          "id": "reswobHttpClientView",
          "name": "HTTP Client",
          "when": "true",
          "icon": "$(globe)",
          "canSelectMany": false,
          "canMoveToNewContainer": false,
          "canRefresh": true
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "reswob-http-client.openHttpClient",
          "when": "view == reswobHttpClientView",
          "group": "navigation@1"
        },
        {
          "command": "reswob-http-client.createCollection",
          "when": "view == reswobHttpClientView",
          "group": "navigation@2"
        },
        {
          "submenu": "reswob-http-client.createMenu",
          "when": "view == reswobHttpClientView",
          "group": "navigation@3"
        }
      ],
      "reswob-http-client.createMenu": [
        {
          "command": "reswob-http-client.openHttpClient",
          "group": "create@1"
        },
        {
          "command": "reswob-http-client.createCollection",
          "group": "create@2"
        },
        {
          "command": "reswob-http-client.importRequests",
          "group": "create@3"
        }
      ],
      "view/item/context": [
        {
          "command": "reswob-http-client.loadRequest",
          "when": "view == reswobHttpClientView && viewItem == saved-request"
        },
        {
          "command": "reswob-http-client.deleteRequest",
          "when": "view == reswobHttpClientView && viewItem == saved-request",
          "group": "inline"
        },
        {
          "command": "reswob-http-client.addToCollection",
          "when": "view == reswobHttpClientView && viewItem == saved-request"
        },
        {
          "command": "reswob-http-client.removeFromCollection",
          "when": "view == reswobHttpClientView && viewItem == saved-request"
        },
        {
          "command": "reswob-http-client.deleteCollection",
          "when": "view == reswobHttpClientView && viewItem == collection",
          "group": "inline"
        }
      ],
      "commandPalette": [
        {
          "command": "reswob-http-client.exportRequests",
          "when": "true"
        },
        {
          "command": "reswob-http-client.importRequests",
          "when": "true"
        },
        {
          "command": "reswob-http-client.deleteRequest",
          "when": "false"
        },
        {
          "command": "reswob-http-client.deleteCollection",
          "when": "false"
        },
        {
          "command": "reswob-http-client.createCollection",
          "when": "false"
        },
        {
          "command": "reswob-http-client.addToCollection",
          "when": "false"
        },
        {
          "command": "reswob-http-client.removeFromCollection",
          "when": "false"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p tsconfig.test.json --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "check-types:webview": "tsc --noEmit --project src/webview/tsconfig.json",
    "lint": "eslint src",
    "lint:fix": "eslint src --fix",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/sinon": "^17.0.4",
    "@types/vscode": "^1.102.0",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2",
    "esbuild": "^0.25.3",
    "eslint": "^9.25.1",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.2.1",
    "husky": "^9.1.6",
    "lint-staged": "^15.2.10",
    "npm-run-all": "^4.1.5",
    "prettier": "^3.4.2",
    "sinon": "^21.0.0",
    "typescript": "^5.8.3"
  },
  "lint-staged": {
    "*.{ts,js}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,html,css}": [
      "prettier --write"
    ]
  }
}
